events {}

http {
    upstream tyk_dashboard {
        server tyk-dashboard:3000;   # container name & port
    }

    upstream tyk_gateway {
        server tyk-gateway:8080;
    }

    upstream oauth2_proxy {
        server oauth2-proxy:4180;
    }

    upstream keycloak {
        server keycloak:8080;
    }

    server {
        listen 80;
        server_name dashboard.tyk.local gateway.tyk.local;

        # Redirect everything to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name dashboard.tyk.local;

        ssl_certificate     /etc/nginx/certs/tyk-dashboard/tyk-dashboard.crt;
        ssl_certificate_key /etc/nginx/certs/tyk-dashboard/tyk-dashboard.key;

        location / {
            proxy_pass http://tyk_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name gateway.tyk.local;

        ssl_certificate     /etc/nginx/certs/tyk-gateway/tyk-gateway.crt;
        ssl_certificate_key /etc/nginx/certs/tyk-gateway/tyk-gateway.key;

        location / {
            proxy_pass http://tyk_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name oauth2.gateway.tyk.local;

        ssl_certificate     /etc/nginx/certs/tyk-gateway/tyk-gateway.crt;
        ssl_certificate_key /etc/nginx/certs/tyk-gateway/tyk-gateway.key;

        location / {
            proxy_pass http://oauth2_proxy;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 443 ssl;
        server_name sso.local;

        ssl_certificate     /etc/nginx/certs/sso/sso.crt;
        ssl_certificate_key /etc/nginx/certs/sso/sso.key;

        location / {
            proxy_pass http://keycloak;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
