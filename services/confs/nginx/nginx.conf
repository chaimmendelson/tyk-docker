events {}

http {

    resolver 127.0.0.11 valid=30s;

    # Map hostnames to upstreams
    map $host $upstream {
        adgaurd.win.local https://host.docker.internal:8453;

        tyk-dashboard.docker.local http://tyk-dashboard:3000;
        tyk-master-gateway.docker.local http://tyk-gateway:8080;
        tyk-gateway.docker.local http://tyk-data-gateway:8080;
        tyk-mdcb.docker.local http://tyk-mdcb:8181;
        sso.docker.local http://keycloak:8080;

        oauth2.docker.local http://oauth2-proxy:4180;

        default "";
    }

    # Redirect HTTP -> HTTPS
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    # Single HTTPS -> HTTP server block for all domains
    server {
        listen 443 ssl;
        server_name default_server;

        ssl_certificate     /etc/nginx/certs/docker-nginx.crt;
        ssl_certificate_key /etc/nginx/certs/docker-nginx.key;

        root /usr/share/nginx/html;

        # Default location
        location / {

            if ($upstream = "") {
                return 404;
            }

            # Otherwise proxy to the upstream
            proxy_pass $upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Internal location for domainNotFound.html
        error_page 404 @domainNotFound;

        location @domainNotFound {
            internal;
            root /usr/share/nginx/html;
            try_files /domainNotFound.html =404;
        }
    }
}
